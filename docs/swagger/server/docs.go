// Package server Code generated by swaggo/swag. DO NOT EDIT
package server

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "检查服务器健康状态",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "健康检查成功",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/go-project_internal_api.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/go-project_internal_api.HealthResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/go-project_internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "用户登录，验证用户名和密码",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "用户登录信息",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/go-project_internal_api.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "登录成功，返回用户信息",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/go-project_internal_api.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/go-project_internal_api.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/go-project_internal_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "用户名或密码错误",
                        "schema": {
                            "$ref": "#/definitions/go-project_internal_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/go-project_internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "用户注册，创建新用户账号",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User Register",
                "parameters": [
                    {
                        "description": "用户注册信息",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/go-project_internal_api.UserRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "注册成功",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/go-project_internal_api.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/go-project_internal_api.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "用户已存在",
                        "schema": {
                            "$ref": "#/definitions/go-project_internal_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/go-project_internal_api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "go-project_internal_api.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "错误代码",
                    "type": "integer",
                    "example": 10001
                },
                "data": {
                    "description": "错误详情"
                },
                "msg": {
                    "description": "错误消息",
                    "type": "string",
                    "example": "fail"
                }
            }
        },
        "go-project_internal_api.HealthResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "服务状态",
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "go-project_internal_api.SuccessResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "响应代码",
                    "type": "integer",
                    "example": 10000
                },
                "data": {
                    "description": "响应数据"
                },
                "msg": {
                    "description": "响应消息",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "go-project_internal_api.User": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "用户ID",
                    "type": "integer",
                    "example": 1
                },
                "password": {
                    "description": "密码（通常不返回）",
                    "type": "string",
                    "example": "-"
                },
                "username": {
                    "description": "用户名",
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "go-project_internal_api.UserLoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "description": "密码，最少6位字符",
                    "type": "string",
                    "minLength": 6,
                    "example": "123456"
                },
                "username": {
                    "description": "用户名，长度3-50字符",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3,
                    "example": "admin"
                }
            }
        },
        "go-project_internal_api.UserRegisterRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "description": "密码，最少6位字符",
                    "type": "string",
                    "minLength": 6,
                    "example": "123456"
                },
                "username": {
                    "description": "用户名，长度3-50字符",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3,
                    "example": "admin"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
